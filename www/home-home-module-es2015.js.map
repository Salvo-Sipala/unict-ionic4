{"version":3,"sources":["./src/app/home/home.page.html","./src/app/home/home.module.ts","./src/app/home/home.page.scss","./src/app/home/home.page.ts","./src/app/tweets.service.ts"],"names":[],"mappings":"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","file":"home-home-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>home</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"createUser()\\\">SIGN UP</ion-button>  \\n  <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"doLogin()\\\">LOGIN</ion-button>\\n  <ion-button expand=\\\"block\\\" color=\\\"tertiary\\\" (click)=\\\"createTweet()\\\">createTweet</ion-button>\\n  <ion-button expand=\\\"block\\\" color=\\\"warning\\\" (click)=\\\"getTweets()\\\">getTweets</ion-button>\\n  <ion-button expand=\\\"block\\\" color=\\\"dark\\\" (click)=\\\"getUsers()\\\">getUsers</ion-button>\\n  <ion-button expand=\\\"block\\\" color=\\\"danger\\\" (click)=\\\"getMe()\\\">Me</ion-button>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \".my-chip .label {\\n  color: var(--ion-color-primary);\\n}\\n\\n.ion-activatable {\\n  position: relative;\\n  overflow: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mYWJpby9EZXNrdG9wL3Rlc3QtaW9uaWM0L3VuaWN0L3NyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyIsInNyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLCtCQUFBO0FDQVI7O0FESUE7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0FDREoiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm15LWNoaXAge1xuICAgIC5sYWJlbCB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gICAgfVxufVxuXG4uaW9uLWFjdGl2YXRhYmxlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn0iLCIubXktY2hpcCAubGFiZWwge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xufVxuXG4uaW9uLWFjdGl2YXRhYmxlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { TweetsService } from '../tweets.service';\nimport { LoginResponse } from '../interfaces/login';\nimport { User } from '../interfaces/user';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n  login = {} as LoginResponse;\n\n  constructor(\n    private tweetsService: TweetsService\n  ) {}\n\n  ngOnInit() {\n  }\n\n  async getTweets() {\n    try {\n      const tweets = await this.tweetsService.getTweets();\n      console.log('tweets: ', tweets);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async getUsers() {\n    try {\n      const users = await this.tweetsService.getUsers();\n      console.log('users: ', users);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async doLogin() {\n    const body = {\n      email: 'fabio@quok.app',\n      password: 'alfio'\n    };\n    try {\n      this.login = await this.tweetsService.login(body);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async createTweet() {\n    try {\n      const tweet = {\n        tweet: 'Hello world!'\n      };\n      const userId = '5dbddb41278d5d19936a049b';\n      await this.tweetsService.createTweet(this.login.accessToken, tweet, userId);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async getMe() {\n    try {\n      await this.tweetsService.me(this.login.accessToken);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async createUser() {\n    const body: User = {\n      email: 'fabio@quok.app',\n      password: 'alfio',\n      name: 'Fabio',\n      surname: 'Manola'\n    };\n    try {\n      const user = await this.tweetsService.createUser(body);\n      console.log('user: ', user);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { Login, LoginResponse } from './interfaces/login';\nimport { User } from './interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TweetsService {\n\n  // API path\n  path = 'http://localhost:4000';\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n\n  constructor(\n    private http: HttpClient\n  ) {}\n\n  async getTweets() {\n    return this.http.get<any>(`${this.path}/tweets`).toPromise();\n  }\n\n  async getUsers() {\n    return this.http.get<any>(`${this.path}/users`).toPromise();\n  }\n\n  async editTweet(token: string, body: any, userId: string) {\n    const headerOptions = this.httpOptions.headers.append('Authorization', `Bearer ${token}`);\n    return this.http.put<string>(`${this.path}/tweets/${userId}`, body, {\n      headers: headerOptions\n    }).toPromise();\n  }\n\n  async createTweet(token: string, body: any, userId: string) {\n    const headerOptions = this.httpOptions.headers.append('Authorization', `Bearer ${token}`);\n    return this.http.post<string>(`${this.path}/tweets/`, body, {\n      headers: headerOptions\n    }).toPromise();\n  }\n\n  async login(body: Login) {\n    return this.http.post<LoginResponse>(`${this.path}/login`, body, this.httpOptions).toPromise();\n  }\n\n  async me(token: string) {\n    const headerOptions = this.httpOptions.headers.append('Authorization', `Bearer ${token}`);\n    return this.http.get<User>(`${this.path}/me`, {\n      headers: headerOptions\n    }).toPromise();\n  }\n\n  async createUser(body: User) {\n    return this.http.post<User>(`${this.path}/users`, body, this.httpOptions).toPromise();\n  }\n\n}\n"],"sourceRoot":""}